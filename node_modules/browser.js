var Duplex = require('duplex');

module.exports = WsStream;
function WsStream(url, protocol) {
  var stream = Duplex();
  stream.emit('pause');

  stream.ws = new WebSocket(url, protocol);

  stream.on('_data', onWrite);
  stream.on('_end', onEnd);

  stream.ws.onopen = onWsOpen;
  stream.ws.onclose = onWsClose;
  stream.ws.onerror = onWsError;
  stream.ws.onmessage = onWsMessage;

  var buffer = [];

  function onWrite(data) {
    if (stream._paused)
      return buffer.push(data);

    send(data);
  }

  function send(data) {
    try {
      if (stream.ws.send(data.toString()) === false)
        stream.emit('error', 'WebSocket#send returned false');
    } catch (error) {
      stream.emit('error', error);
    }
  }

  function onEnd() {
    stream.ws.close();
  }

  function onWsOpen() {
    stream.emit('drain');

    while (buffer.length)
      send(buffer.shift());

    stream.emit('open');
  }

  function onWsClose() {
    stream.emit('close');
  }

  function onWsError(ev) {
    stream.emit('error', ev.data);
  }

  function onWsMessage(ev) {
    stream._data(ev.data);
  }

  stream.destroy = destroy;
  function destroy() {
    stream.ws.close();
  }

  return stream;
}
