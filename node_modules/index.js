var Duplex = require('stream').Duplex;
var util = require('util');

module.exports = WsStream;
function WsStream(wsConnection, options) {
  var defaultOpts = {
    encoding: 'utf8'
  };

  var enforcedOpts = {
    objectMode: false,
    allowHalfOpen: false
  };

  options = util._extend(defaultOpts, options);
  options = util._extend(options, enforcedOpts);

  var stream = new Duplex(this, options);
  stream._read = read;
  stream._write = write;

  stream.ws = wsConnection;
  stream.ws.on('message', onWsMessage);
  stream.ws.on('close', onWsClose);
  stream.ws.on('open', onWsOpen);
  stream.ws.on('end', onWsEnd);

  stream.close = stream.ws.close.bind(stream.ws);

  function read() {
  }

  function write(chunk, encoding, cb) {
    if (stream.ws.readyState !== 1)
      return stream.emit('close');

    if (encoding && encoding !== 'buffer')
      chunk = chunk.toString(encoding);

    try {
      stream.ws.send(chunk, cb);
    } catch (error) {
      cb(error);
    }
  }

  function onWsOpen() {
    stream.emit('open');
  }

  function onWsClose() {
    stream.emit('close');
  }

  function onWsEnd() {
    /* according to: http://nodejs.org/api/stream.html :
       "The push() method will explicitly insert some data into the read queue.
        If it is called with null then it will signal the end of the data." */
    stream.push(null);
  }

  function onWsMessage(message) {
    stream.push(message);
  }

  return stream;
}
